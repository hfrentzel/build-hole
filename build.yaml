envs:
  - aarch64-linux-22.04
  - x86_64-linux-22.04
  - x86_64-windows
apps:
  bat:
    type: cargo
    repo: sharkdp/bat
    version: 0.25.0
    tag: v{version}
    package: |
      mkdir -p $ARCHIVE_DIR/share/man/man1
      mkdir -p $ARCHIVE_DIR/share/bash-completion/completions
      cp target/$TARGET/release/build/bat-*/out/assets/manual/bat.1 $ARCHIVE_DIR/share/man/man1/bat.1 
      cp target/$TARGET/release/build/bat-*/out/assets/completions/bat.bash $ARCHIVE_DIR/share/bash-completion/completions/bat.bash
  delta:
    type: cargo
    repo: dandavison/delta
    version: 0.18.2
  fd:
    type: cargo
    repo: sharkdp/fd
    version: 10.2.0 
    tag: v{version}
    package: |
      mkdir -p $ARCHIVE_DIR/share/man/man1
      mkdir -p $ARCHIVE_DIR/share/bash-completion/completions
      make completions
      cp doc/fd.1 $ARCHIVE_DIR/share/man/man1/fd.1
      cp autocomplete/fd.bash $ARCHIVE_DIR/share/bash-completion/completions/fd.bash
  fzf:
    type: go
    repo: junegunn/fzf
    version: 0.61.1
    tag: v{version}
    flags:
      - -X main.version={{ .Version }}
      - -X main.revision={{ .ShortCommit }}
    package: |
      mkdir $ARCHIVE_DIR/share
      mkdir $ARCHIVE_DIR/shell
      cp -r man/ $ARCHIVE_DIR/share
      cp shell/completion.bash $ARCHIVE_DIR/shell/fzf.sh
  golangci-lint:
    type: go
    repo: golangci/golangci-lint
    version: 2.0.2
    tag: v{version}
    entrypoint: "./cmd/golangci-lint"
    flags:
      - -X main.version={{.Version}}
      - -X main.commit={{.ShortCommit}}
      - -X main.date={{.Date}}
    package: |
      bin="$ARCHIVE_DIR/bin/golangci-lint"
      mkdir -p $ARCHIVE_DIR/share/bash-completion/completions
      $bin completion bash > $ARCHIVE_DIR/share/bash-completion/completions/golangci-lint.bash
  gopls:
    type: go
    repo: golang/tools
    version: 0.18.1
    tag: gopls/v{version}
    working-directory: gopls
    flags:
      - -X main.version={{.Version}}
  jira:
    type: go
    repo: ankitpokhrel/jira-cli
    version: 1.5.2
    tag: v{version}
    entrypoint: "./cmd/jira"
    flags:
      - -X github.com/ankitpokhrel/jira-cli/internal/version.Version={{.Version}}
      - -X github.com/ankitpokhrel/jira-cli/internal/version.GitCommit={{.FullCommit}}
      - -X github.com/ankitpokhrel/jira-cli/internal/version.SourceDateEpoch={{.CommitTimestamp}}
    package: |
      bin="$ARCHIVE_DIR/bin/jira"
      mkdir -p $ARCHIVE_DIR/share/bash-completion/completions
      $bin completion bash > $ARCHIVE_DIR/share/bash-completion/completions/jira.bash
      $bin man --generate --output $ARCHIVE_DIR/share/man/man7/
  lua-language-server:
    type: custom
    repo: LuaLS/lua-language-server
    version: 3.14.0
    exclude:
      - x86_64-windows
    recurse: true
    package: |
      sudo apt install ninja-build
      PLATFORM=$([ $GOARCH = amd64 ] && echo linux-x64 || echo linux-arm64)
      ./make.sh $PLATFORM
      echo -e '#!/bin/bash\nexec "~/.local/share/lua/bin/lua-language-server" "$@"' > $ARCHIVE_DIR/bin/lua-language-server
      chmod +x $ARCHIVE_DIR/bin/lua-language-server
      mkdir -p $ARCHIVE_DIR/share/lua
      cp -r main.lua changelog.md debugger.lua locale meta script bin $ARCHIVE_DIR/share/lua
  neovim:
    type: custom
    repo: neovim/neovim
    exe_name: nvim
    version: 0.11.0
    tag: v{version}
    package: |
      ./.github/scripts/install_deps.sh
      CMAKE_BUILD_TYPE=Release
      [[ $(arch) = x86_64 ]] && ARCH="x86_64" || ARCH="arm64"
      ./scripts/genappimage.sh
      cpack --config build/CPackConfig.cmake -G TGZ
      tar -xzf build/nvim-linux-$ARCH.tar.gz -C $ARCHIVE_DIR --strip-components 1
    package_windows: |
      curl -LO https://github.com/neovim/neovim/releases/download/v$VERSION/nvim-win64.zip
      unzip nvim-win64.zip
      rm -r $ARCHIVE_DIR
      mv nvim-win64 $ARCHIVE_DIR
  node:
    type: custom
    repo: nodejs/node
    version: 22.14.0
    tag: v{version}
    package: |
      [[ $(arch) = x86_64 ]] && ARCH="x64" || ARCH="arm64"
      curl -LO https://nodejs.org/dist/v$VERSION/node-v$VERSION-linux-$ARCH.tar.xz
      tar -xf node-v$VERSION-linux-$ARCH.tar.xz -C $ARCHIVE_DIR --strip-components 1
    package_windows: |
      curl -L https://nodejs.org/dist/v$VERSION/node-v$VERSION-win-x64.zip -o node.zip
      unzip node.zip
      mkdir $ARCHIVE_DIR/share
      mv node-v$VERSION-win-x64 $ARCHIVE_DIR/share/node
      cp $ARCHIVE_DIR/share/node/node.exe $ARCHIVE_DIR/bin/
  nushell:
    type: cargo
    repo: nushell/nushell
    version: 0.104.0
    exe_name: nu
    flags: --features=static-link-openssl
    prebuild_linux: |
      sudo apt install -y pkg-config libssl-dev build-essential musl-tools
  ripgrep:
    type: cargo
    repo: burntsushi/ripgrep
    version: 14.1.1
    exe_name: rg
    flags: --features=pcre2
    package: |
      cargo build
      bin="target/debug/rg"
      mkdir -p $ARCHIVE_DIR/share/man/man1
      mkdir -p $ARCHIVE_DIR/share/bash-completion/completions
      $bin --generate man > $ARCHIVE_DIR/share/man/man1/rg.1
      $bin --generate complete-bash > $ARCHIVE_DIR/share/bash-completion/completions/rg.bash
  selene:
    type: cargo
    repo: kampfkarren/selene
    version: 0.28.0
    flags: --no-default-features
  stylua:
    type: cargo
    repo: johnnymorganz/stylua
    version: 2.0.2
    tag: v{version}
  tmux:
    type: custom
    repo: tmux/tmux
    version: '3.3'
    exclude:
      - x86_64-windows
    package: |
      sudo apt install -y libevent-dev ncurses-dev build-essential bison \
        pkg-config autoconf automake
      sh autogen.sh
      ./configure
      make
      cp tmux $ARCHIVE_DIR/bin
      mkdir -p $ARCHIVE_DIR/share/man/man1
      cp tmux.1 $ARCHIVE_DIR/share/man/man1
  yq:
    type: go
    repo: mikefarah/yq
    version: 4.45.1
    tag: v{version}
    package: |
      if [ $GOOS == "linux" ]; then
        sudo apt install pandoc -y
        mkdir -p $ARCHIVE_DIR/share/man/man1
        ./scripts/generate-man-page-md.sh
        pandoc --standalone --to man --variable=title:"YQ" \
              --variable=section:"1" \
              --variable=header:"yq (https://github.com/mikefarah/yq/) version $VERSION" \
              --variable=author:"Mike Farah" \
              --output=$ARCHIVE_DIR/share/man/man1/yq.1 man.md
      fi
  zoxide:
    type: cargo
    repo: ajeetdsouza/zoxide
    version: 0.9.7
    tag: v{version}
    package: |
      mkdir -p $ARCHIVE_DIR/share/bash-completion/completions 
      cp -r man/ $ARCHIVE_DIR/share
      cp contrib/completions/zoxide.bash $ARCHIVE_DIR/share/bash-completion/completions/zoxide.bash
